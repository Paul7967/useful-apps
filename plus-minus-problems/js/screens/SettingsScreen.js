/**
 * –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–≥—Ä—ã –∏ –∑–∞–ø—É—Å–∫
 */
class SettingsScreen extends BaseScreen {
    constructor(app) {
        super(app, 'settings');
        this.storageService = app.services.storage;
    }

    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
     */
    bindEvents() {
        super.bindEvents();
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
        this.addEventListener('startGame', 'click', () => {
            this.startGame();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ select
        this.addEventListener('playerNameSelect', 'change', () => {
            this.handlePlayerSelectChange();
        });

        // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
        this.addEventListener('addPlayerBtn', 'click', () => {
            this.showAddPlayerModal();
        });

        // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
        this.addEventListener('closeModalBtn', 'click', () => {
            this.hideAddPlayerModal();
        });

        this.addEventListener('cancelAddPlayer', 'click', () => {
            this.hideAddPlayerModal();
        });

        this.addEventListener('confirmAddPlayer', 'click', () => {
            this.addNewPlayer();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –∏–º–µ–Ω–∏ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        this.addEventListener('newPlayerName', 'keydown', (e) => {
            if (e.key === 'Enter') {
                this.addNewPlayer();
            }
        });

        this.addEventListener('maxNumber', 'change', () => {
            this.saveGameSettings();
        });

        this.addEventListener('examplesCount', 'change', () => {
            this.saveGameSettings();
        });

        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
        document.querySelectorAll('input[name="operationType"]').forEach(radio => {
            this.addEventListener(radio, 'change', () => {
                this.saveGameSettings();
            });
        });

        // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        this.addEventListener('clearData', 'click', () => {
            this.clearAllData();
        });

        console.log('üìã [SettingsScreen] –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–∞
     */
    onShow() {
        console.log('üìã [SettingsScreen] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫');
        this.loadSettings();
        this.updatePlayerName();
        this.focusFirstInput();
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    loadSettings() {
        console.log('üìã [SettingsScreen] –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
        const playerName = this.storageService.loadPlayerName();
        this.setValue('playerNameInput', playerName);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º select —Å –∏–≥—Ä–æ–∫–∞–º–∏
        this.updatePlayerSelect();
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (–ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞)
        setTimeout(() => {
            this.restoreSelectedPlayer(playerName);
        }, 0);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
        const settings = this.storageService.loadGameSettings();
        this.setValue('maxNumber', settings.maxNumber);
        this.setValue('examplesCount', settings.examplesCount);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–π
        const operationRadio = document.querySelector(`input[name="operationType"][value="${settings.operationType}"]`);
        if (operationRadio) {
            operationRadio.checked = true;
        }
        
        console.log('üìã [SettingsScreen] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', settings);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã
     */
    saveGameSettings() {
        const settings = {
            maxNumber: parseInt(this.getValue('maxNumber')) || 10,
            examplesCount: parseInt(this.getValue('examplesCount')) || 5,
            operationType: document.querySelector('input[name="operationType"]:checked')?.value || 'addition'
        };
        
        this.storageService.saveGameSettings(settings);
        console.log('üíæ [SettingsScreen] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', settings);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏–≥—Ä–æ–∫–∞
     */
    savePlayerName() {
        const name = this.getValue('playerNameInput');
        if (name && name.trim()) {
            this.storageService.savePlayerName(name.trim());
            console.log('üíæ [SettingsScreen] –ò–º—è –∏–≥—Ä–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:', name.trim());
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏–≥—Ä–æ–∫–∞
     */
    updatePlayerName() {
        const name = this.getValue('playerNameInput');
        const playerNameSpan = this.getElement('playerName');
        
        if (playerNameSpan) {
            if (name && name.trim()) {
                playerNameSpan.textContent = name.trim();
            } else {
                playerNameSpan.textContent = '–ò–≥—Ä–æ–∫';
            }
        }
        
        // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –≤ Header
        this.app.updatePlayerNameInHeader(name);
    }

    /**
     * –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
     */
    startGame() {
        console.log('üéÆ [SettingsScreen] –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã');
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        const maxNumber = parseInt(this.getValue('maxNumber'));
        const examplesCount = parseInt(this.getValue('examplesCount'));
        
        if (maxNumber < 1 || examplesCount < 1) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–±–æ–ª—å—à–µ 0)');
            return;
        }
        
        if (maxNumber > 500) {
            alert('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 500');
            return;
        }
        
        if (examplesCount > 300) {
            alert('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 300');
            return;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.saveGameSettings();
        this.savePlayerName();
        
        // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
        this.app.startGame();
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞
     */
    focusFirstInput() {
        const playerNameInput = this.getElement('playerNameInput');
        if (playerNameInput) {
            playerNameInput.focus();
        }
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    clearAllData() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            this.storageService.clearAllData();
            alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
            this.loadSettings();
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    getCurrentSettings() {
        return {
            playerName: this.getValue('playerNameInput') || '–ò–≥—Ä–æ–∫',
            maxNumber: parseInt(this.getValue('maxNumber')) || 10,
            examplesCount: parseInt(this.getValue('examplesCount')) || 5,
            operationType: document.querySelector('input[name="operationType"]:checked')?.value || 'addition'
        };
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    setSettings(settings) {
        if (settings.playerName) {
            this.setValue('playerNameInput', settings.playerName);
        }
        if (settings.maxNumber) {
            this.setValue('maxNumber', settings.maxNumber);
        }
        if (settings.examplesCount) {
            this.setValue('examplesCount', settings.examplesCount);
        }
        if (settings.operationType) {
            const radio = document.querySelector(`input[name="operationType"][value="${settings.operationType}"]`);
            if (radio) {
                radio.checked = true;
            }
        }
        
        this.updatePlayerName();
    }

    /**
     * –°–±—Ä–æ—Å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    resetToDefaults() {
        const defaultSettings = {
            playerName: '',
            maxNumber: 10,
            examplesCount: 5,
            operationType: 'addition'
        };
        
        this.setSettings(defaultSettings);
        this.saveGameSettings();
        console.log('üîÑ [SettingsScreen] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å select —Å –∏–≥—Ä–æ–∫–∞–º–∏
     */
    updatePlayerSelect() {
        const select = this.getElement('playerNameSelect');
        if (!select) return;
        
        const allPlayers = this.storageService.getAllPlayers();
        
        // –û—á–∏—â–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏
        select.innerHTML = '';
        
        if (allPlayers.length === 0) {
            // –ï—Å–ª–∏ –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤, –æ—Ç–∫–ª—é—á–∞–µ–º select –∏ –¥–æ–±–∞–≤–ª—è–µ–º placeholder
            select.disabled = true;
            const placeholderOption = document.createElement('option');
            placeholderOption.value = '';
            placeholderOption.textContent = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤';
            placeholderOption.disabled = true;
            select.appendChild(placeholderOption);
            console.log('üë• [SettingsScreen] Select –æ—Ç–∫–ª—é—á–µ–Ω - –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤');
        } else {
            // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–≥—Ä–æ–∫–∏, –≤–∫–ª—é—á–∞–µ–º select –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–∏
            select.disabled = false;
            allPlayers.forEach(player => {
                const option = document.createElement('option');
                option.value = player;
                option.textContent = player;
                select.appendChild(option);
            });
            console.log('üë• [SettingsScreen] Select –æ–±–Ω–æ–≤–ª–µ–Ω —Å', allPlayers.length, '–∏–≥—Ä–æ–∫–∞–º–∏');
        }
        
        console.log('üë• [SettingsScreen] –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:', allPlayers);
        console.log('üë• [SettingsScreen] –û–ø—Ü–∏–∏ –≤ select:', Array.from(select.children).map(opt => opt.textContent));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –≤ select
     */
    handlePlayerSelectChange() {
        const select = this.getElement('playerNameSelect');
        
        if (!select) return;
        
        const selectedValue = select.value;
        
        if (selectedValue) {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            this.setValue('playerNameInput', selectedValue);
            this.updatePlayerName();
            this.savePlayerName();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage
            this.storageService.savePlayerName(selectedValue);
            console.log('üë§ [SettingsScreen] –í—ã–±—Ä–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏–≥—Ä–æ–∫:', selectedValue);
        }
    }


    /**
     * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
     */
    restoreSelectedPlayer(playerName) {
        const select = this.getElement('playerNameSelect');
        if (!select) return;
        
        console.log('üë§ [SettingsScreen] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞:', playerName);
        
        // –ï—Å–ª–∏ select –æ—Ç–∫–ª—é—á–µ–Ω (–Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤), –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        if (select.disabled) {
            console.log('üë§ [SettingsScreen] Select –æ—Ç–∫–ª—é—á–µ–Ω, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ');
            return;
        }
        
        if (playerName && playerName.trim()) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫ –≤ —Å–ø–∏—Å–∫–µ
            const allPlayers = this.storageService.getAllPlayers();
            console.log('üë§ [SettingsScreen] –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏:', allPlayers);
            console.log('üë§ [SettingsScreen] –û–ø—Ü–∏–∏ –≤ select:', Array.from(select.children).map(opt => opt.textContent));
            
            if (allPlayers.includes(playerName)) {
                // –í—ã–±–∏—Ä–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
                select.value = playerName;
                console.log('üë§ [SettingsScreen] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–≥—Ä–æ–∫:', playerName);
                console.log('üë§ [SettingsScreen] –í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', select.value);
            } else {
                // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ
                if (allPlayers.length > 0) {
                    select.value = allPlayers[0];
                    console.log('üë§ [SettingsScreen] –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π:', allPlayers[0]);
                }
            }
        } else {
            // –ï—Å–ª–∏ –∏–º—è –Ω–µ –∑–∞–¥–∞–Ω–æ, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            const allPlayers = this.storageService.getAllPlayers();
            if (allPlayers.length > 0) {
                select.value = allPlayers[0];
                console.log('üë§ [SettingsScreen] –ò–º—è –∏–≥—Ä–æ–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω–æ, –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π:', allPlayers[0]);
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
     */
    showAddPlayerModal() {
        console.log('üë§ [SettingsScreen] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞');
        const modal = document.getElementById('addPlayerModal');
        const input = document.getElementById('newPlayerName');
        
        if (modal && input) {
            modal.style.display = 'block';
            input.value = '';
            input.focus();
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            modal.addEventListener('click', this.handleModalClick.bind(this));
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
     */
    hideAddPlayerModal() {
        console.log('üë§ [SettingsScreen] –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞');
        const modal = document.getElementById('addPlayerModal');
        
        if (modal) {
            modal.style.display = 'none';
            modal.removeEventListener('click', this.handleModalClick.bind(this));
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
     */
    handleModalClick(e) {
        const modal = document.getElementById('addPlayerModal');
        if (e.target === modal) {
            this.hideAddPlayerModal();
        }
    }

    /**
     * –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
     */
    addNewPlayer() {
        console.log('üë§ [SettingsScreen] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞');
        const input = document.getElementById('newPlayerName');
        
        if (!input) return;
        
        const newPlayerName = input.value.trim();
        
        if (!newPlayerName) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞');
            input.focus();
            return;
        }
        
        if (newPlayerName.length < 2) {
            alert('–ò–º—è –∏–≥—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
            input.focus();
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫
        const existingPlayers = this.storageService.getAllPlayers();
        if (existingPlayers.includes(newPlayerName)) {
            alert('–ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            input.focus();
            return;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
        this.storageService.savePlayerName(newPlayerName);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ select
        this.updatePlayerSelect();
        
        // –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        const select = document.getElementById('playerNameSelect');
        if (select) {
            select.value = newPlayerName;
            this.handlePlayerSelectChange();
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.hideAddPlayerModal();
        
        console.log('‚úÖ [SettingsScreen] –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω:', newPlayerName);
    }
}
